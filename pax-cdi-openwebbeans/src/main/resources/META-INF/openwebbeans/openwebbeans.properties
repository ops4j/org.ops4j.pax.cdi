#
# Copyright 2021 OPS4J.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


################################################################################################
################################### DEFAULT SPI CONFIGURATION SECTION ##########################
################################################################################################ 

# this is the basic configuration, thus it has a very low ordinal of 10
configuration.ordinal=20

################################### Default Container Lifecycle ################################
#Default implementation of org.apache.webbeans.corespi.ContainerLifecycle.
org.apache.webbeans.spi.ContainerLifecycle=org.apache.webbeans.lifecycle.StandaloneLifeCycle
################################################################################################

################################### Default JNDI Service #######################################
#Default implementation of org.apache.webbeans.corespi.JNDIService.
org.apache.webbeans.spi.JNDIService=org.apache.webbeans.corespi.se.DefaultJndiService
################################################################################################

################################### Default Bean Definition Archive Service ####################################
org.apache.webbeans.spi.BeanArchiveService=org.apache.webbeans.xml.DefaultBeanArchiveService
################################################################################################

########################### Default ApplicationBoundary Service ################################
#Default implementation of org.apache.webbeans.corespi.JNDIService.
org.apache.webbeans.spi.ApplicationBoundaryService=org.apache.webbeans.corespi.se.DefaultApplicationBoundaryService
################################################################################################

################################### Default Scanner Service ####################################
#Default implementation of org.apache.webbeans.corespi.ScannerService.
org.apache.webbeans.spi.ScannerService=org.ops4j.pax.cdi.openwebbeans.BundleScannerService
################################################################################################

################################### Default EL Adaptor ####################################
#Default implementation of org.apache.webbeans.spi.adaptor.ELAdaptor
org.apache.webbeans.spi.adaptor.ELAdaptor=org.apache.webbeans.el22.EL22Adaptor
################################################################################################

################################### Default Contexts Service ####################################
#Default implementation of org.apache.webbeans.corespi.ContextsService.
org.apache.webbeans.spi.ContextsService=org.apache.webbeans.corespi.se.DefaultContextsService
################################################################################################

################################### Default Contexts Service ####################################
# Default SecurityService implementation which directly invokes underlying classes
# without using a SecurityManager
org.apache.webbeans.spi.SecurityService=org.apache.webbeans.corespi.security.SimpleSecurityService
################################################################################################

################################ Default Implementation-Loader Service ###########################################
# Service which encapsulates the Service-Loader of Java 1.6+ to allow custom implementations to support Java 1.5
#org.apache.webbeans.spi.LoaderService=org.apache.webbeans.service.DefaultLoaderService
org.apache.webbeans.spi.LoaderService=org.ops4j.pax.cdi.openwebbeans.BundleLoaderService

################################################################################################ 
#################################### SEVERAL CONFIGURATION PARAMETERS ##########################
################################################################################################

#################################### Use Embedded OpenEJB Discovery ############################
#If it is true, it checks every bean class whether or not represent EJB Bean
org.apache.webbeans.spi.deployer.useEjbMetaDataDiscoveryService=false
################################################################################################

############################# Use OWB EJB interceptor for injection ###########################
#If it is true, the OWB EJB interceptor performs injection on the EJB instance
org.apache.webbeans.application.useEJBInterceptorInjection=true
################################################################################################

############################# Use OWB EJB interceptor for Context activation ###################
#If it is true, the OWB EJB interceptor performs activation of the contexts
org.apache.webbeans.application.useEJBInterceptorActivation=true
################################################################################################

################# Force not having Checked Exceptions in lifecycle methods  ####################
# If it is true, OWB forces that lifecycle methods like @PreDestroy and @PostConstruct must not
# throw any checked exceptions. This is the behaviour which is defined in the EE interceptor
# spec. Since this is sometimes way too restrictive, we allow to relax this rule by configuration
# The default value is 'true' internally.
# ATTENTION: this property works container wide!
# org.apache.webbeans.forceNoCheckedExceptions=true
################################################################################################

################################## OWB Specific Injection ######################################
#If false, uses spec. defined injection with @Inject. Not recommended use as true.
#It will be removed in future development. 
org.apache.webbeans.fieldInjection.useOwbSpecificInjection=false
################################################################################################

################################# Conversation Support #########################################
org.apache.webbeans.application.supportsConversation=false
################################################################################################

################################### Default Conversation Service ###############################
# Default implementation of org.apache.webbeans.corespi.ConversationService.
# This one does not support conversation propagation. It's basically a no-op implementation
# This will get overwritten in the web and jsf plugins
org.apache.webbeans.spi.ConversationService=org.apache.webbeans.conversation.DefaultConversationService
################################################################################################

####################### Archive Centric Beans.xml Scanning #####################################
# If true, will enable decorators, interceptors and alternatives based on the beans.xml
# of the appropriate archive.
org.apache.webbeans.useBDABeansXMLScanner=false
################################################################################################

####################### Proxy Factory Class Loader Update ######################################
# If true, ProxyFactory.classLoaderProvider will be updates on ClassNotFoundException, 
# default to false
org.apache.webbeans.javassist.useClassLoaderProvider=false
################################################################################################

########################### Proxy Implmenentation Mapping ######################################
# This allows mapping a Scope Annotation class to a specific InterceptorProxy which are
# typically sub classes of NormalScopedBeanInterceptorHandler
#
# org.apache.webbeans.proxy.mapping.javax.enterprise.context.RequestScoped=org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler
org.apache.webbeans.proxy.mapping.javax.enterprise.context.ApplicationScoped=org.apache.webbeans.intercept.ApplicationScopedBeanInterceptorHandler
org.apache.webbeans.proxy.mapping.javax.enterprise.context.RequestScoped=org.apache.webbeans.intercept.RequestScopedBeanInterceptorHandler
org.apache.webbeans.proxy.mapping.javax.enterprise.context.SessionScoped=org.apache.webbeans.intercept.SessionScopedBeanInterceptorHandler
################################################################################################

################################################################################################

############################ Eager Session Initialisation ######################################
# By default we do _not_ force session creation in our WebBeansConfigurationListener. We only create the
# Session if we really need the SessionContext. E.g. when we create a Contextual Instance in it.
# Sometimes this creates a problem as the HttpSession can only be created BEFORE anything got written back
# to the client.
# With this configuration you can choose between 3 settings
#  * true: the Session will _always_ eagerly be created at the begin of a request
#  * false: the Session will _never_ eagerly be created but only lazily when the first @SessionScoped bean gets used
#  * any other value will be interpreted as Java regular expression for request URIs which need eager Session initialization
org.apache.webbeans.web.eagerSessionInitialisation=false
################################################################################################

# see org.apache.webbeans.web.lifecycle.WebContainerLifecycle.startApplication()
org.apache.webbeans.web.add-beans=false

######################### Java version for generated proxy classes #############################
# The Java Version to use for the generated proxy classes.
# If "auto" then we will pick the version of the current JVM.
# The default is set to "1.6" as some tools in jetty/tomcat/etc still
# cannot properly handle Java8 (mostly due to older Eclipse JDT versions).
org.apache.webbeans.generator.javaVersion=1.6
################################################################################################


